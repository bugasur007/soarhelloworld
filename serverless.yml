# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: soarhelloworld
# app and org for use with dashboard.serverless.com
app: soarhelloworld
org: fvigo

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: python3.8

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
   - Effect: "Allow"
     Action:
       - "s3:ListBucket"
     Resource: "arn:aws:s3:::${self:provider.environment.S3_BUCKET}"
   - Effect: "Allow"
     Action:
       - "s3:GetObject"
     Resource: "arn:aws:s3:::${self:provider.environment.S3_BUCKET}/*"

  environment:
    S3_BUCKET: ${self:service}-${opt:stage, self:provider.stage}
    JSON_FILE: "helloworld.json"
    API_KEY: ${file(./secrets.yml):API_KEY}

# you can add packaging information here
#package:
#  include:
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**

functions:
  get_alerts:
    handler: handler.get_alerts
    events:
     - http:
         path: get_alerts
         method: get
  domain:
    handler: handler.domain
    events:
     - http:
         path: domain
         method: get

# you can add CloudFormation resource templates here
resources:
 Resources:
   NewResource:
     Type: AWS::S3::Bucket
     Properties:
       BucketName: ${self:provider.environment.S3_BUCKET}
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

plugins:
  - serverless-python-requirements
  - serverless-domain-manager
  - serverless-s3-deploy

custom:
  customDomain:
    domainName: soar.monstersofhack.com
    certificateName: 'soar.monstersofhack.com'
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
  assets:
    targets:
      - bucket: ${self:provider.environment.S3_BUCKET}
        files:
        - source: ./alerts/
          globs: '**/*.json'
  